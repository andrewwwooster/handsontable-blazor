@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<div id="hot">
</div>

@code 
{
    [Parameter]
    public string? Id { get; set; }
    [Parameter]
    public ConfigurationOptions? ConfigurationOptions { get; set; }
    [Parameter]
    public HandsontableHooks.AfterChangeHook? OnAfterChange { get; set; }

    public HandsontableJsInterop? HandsontableJsInterop { get; private set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && HandsontableJsInterop == null )
        {
            HandsontableJsInterop = new HandsontableJsInterop(JSRuntime);
            await HandsontableJsInterop.RegisterRenderer("customRenderer", RendererCallback);
            await HandsontableJsInterop.NewHandsontable(
                Id!, ConfigurationOptions
            );
            if (OnAfterChange != null) await HandsontableJsInterop.AddHookAfterChange(OnAfterChange);
        }
    }

    public async Task RendererCallback(HandsontableRenderer.RendererArgs args)
    {
        var jqTd = new JQueryJsInterop(args.Td);
        await jqTd.Attr("style", "background-color: #ffcc00; color: #000000; font-weight: bold;");
    }
}

